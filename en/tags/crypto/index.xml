<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Crypto on Blog</title><link>https://dilagluc.github.io/en/tags/crypto/</link><description>Recent content in Crypto on Blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Wed, 19 Jul 2023 02:08:37 +0200</lastBuildDate><atom:link href="https://dilagluc.github.io/en/tags/crypto/index.xml" rel="self" type="application/rss+xml"/><item><title>Cryptanalyse intégrale sur AES à tours réduits: l'attaque dite carrée</title><link>https://dilagluc.github.io/en/posts/2023/crypto/aes/square-attack-aes/</link><pubDate>Wed, 19 Jul 2023 02:08:37 +0200</pubDate><guid>https://dilagluc.github.io/en/posts/2023/crypto/aes/square-attack-aes/</guid><description>Dans l&amp;rsquo;article Chiffrement AES - Introduction , on a eu à étudier et comprendre le fonctionnement du chiffrement AES. On se pose maintenant la question de savoir quelles sont les attaques possibles sur ce chiffrement. Dans cet article, nous étudierons l&amp;rsquo;attaque dite carrée sur un AES à tours réduits.
Introduction La cryptanalyse intégrale est une technique de cryptanalyse applicable sur les chiffrements par blocs basés sur un réseau de substitution-permutation. Elle a été conçu pour la première fois pour attaquer un chiffrement du nom de SQUARE (d&amp;rsquo;où le nom square attack), mais fut plus tard généralisée à d&amp;rsquo;autres algorithmes de chiffrement qui ne sont pas de type SQUARE.</description></item><item><title>Chiffrement AES</title><link>https://dilagluc.github.io/en/posts/2023/crypto/aes/intro-to-aes/</link><pubDate>Sun, 09 Jul 2023 20:32:54 +0200</pubDate><guid>https://dilagluc.github.io/en/posts/2023/crypto/aes/intro-to-aes/</guid><description>AES est un chiffrement par bloc basé sur des opérations matricielles. Il existe plusieurs types d&amp;rsquo;implémentation, AES-128, AES-256 etc. et également des modes (ECB, CBC, etc.)
Introduction AES est un chiffrement par blocs qui peut chiffer et déchiffrer pas moins et pas plus de de 128 bits (16 octets) de message en clair. Le message est donc divisé par bloc de 16 octets. Pour pallier à cette limitation, on utilise un mode d&amp;rsquo;opération (ECB, CBC, CTR etc.</description></item></channel></rss>